[tool.poetry]
name = "bgc-data-processing"
version = "0.1.0"
description = "Set of scripts to prepare csv files with BGC variables for EnKF prepobs"
authors = ["Ga√©tan Rigaut <gaetanrigaut.s@gmail.com>"]
readme = "README.md"
packages = [{ include = "bgc_data_processing" }]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^1.5.2"
numpy = "<1.24"
cartopy = "0.21.1"
netcdf4 = "^1.6.2"
pyproj = "~3.4"
shapely = "^2.0.1"
geopandas = "^0.12.2"
eomaps = "^6.3"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-gen-files = "^0.4.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-autorefs = "^0.4.1"
mkdocs-material = "^9.0.6"
mkdocstrings = { extras = ["python"], version = "^0.20.0" }


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
python-git-info = "^0.8.2"
pre-commit = "^3.1.1"
ruff = "^0.0.254"
interrogate = "^1.5.0"
pydocstyle = "^6.3.0"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    # pyflakes
    'F',
    # pycodestyle Errors (E) and Warnings (W)
    'E',
    'W',
    # isort
    "I",
    # pep8-naming
    'N',
    # pydocstyle
    'D',
    # pyupgrade
    "UP",
    # flake8-builtins
    "A",
    # flake8-unused-arguments
    "ARG",
    # flake8-bugbear
    'B',
    # # flake8-commas
    'COM',
    # flake8-comprehensions
    'C4',
    # flake8-quotes
    'Q',
    # flake8-return
    "RET",
    # flake8-self
    "SLF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # pylint
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    # Ruff-specific rules
    'RUF',
]
ignore = [
    # do not assign a lambda expression, use a def
    "E731",
    # controversial
    "B006",
    # controversial
    "B008",
    # Function definition does not bind loop variable
    "B023",
    # Too many arguments to function call
    "PLR0913",
    # Magic number
    "PLR2004",
]
unfixable = [
    # Remove unused-imports
    "F401",
    # Variable assigned but never used
    "F841",
    # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM118",
    # move to type-checking block
    "TCH003",
]

[tool.isort]
profile = 'black'

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = true
ignore-nested-classes = true
ignore-setters = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "tests", "sandbox"]
verbose = 1
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "docs/assets/badges"
badge-format = "svg"

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.pydocstyle]
convention = "numpy"
match-dir = "bgc_data_processing/*"
